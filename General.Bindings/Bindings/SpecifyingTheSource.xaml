<Window x:Class="Bindings.SpecifyingTheSource"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Bindings"
        Title="SpecifyingTheSource" Height="300" Width="300">
    <Window.Resources>
        <local:SomeNotifyPropertyChangedImplementingClass x:Key="theSource" NotifyingProperty="Object defined in Resource section" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- a simple binding with a defualt source: the DataContext -->
        <TextBlock Grid.Row="0" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Path=NotifyingProperty}" VerticalAlignment="Top"/>
        <!-- Getting outside the DataContext -->
        <!-- Specifying the source: using the Source property-->
        <!-- we must somehow get a reference to the source: the simplest way being instantiating it on the spot -->
        <TextBlock Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap"  VerticalAlignment="Top">
            <TextBlock.Text>
                <Binding Path="NotifyingProperty">
                    <Binding.Source>
                        <local:SomeNotifyPropertyChangedImplementingClass NotifyingProperty="InLine defined object" />
                    </Binding.Source>
                </Binding>
            </TextBlock.Text>
        </TextBlock>
        <!-- we must somehow get a reference to the source: their are other ways of specifying the reference, like as a resource -->
        <TextBlock Grid.Row="2" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Path=NotifyingProperty, Source={StaticResource theSource}}" VerticalAlignment="Top"/>
        <!-- Specifying the source: using the RelativeSource property-->
        <!-- By specifying the source we can navigate to other objects using following relations:
            * Self: the object on which the binding is defined
            * AncestorType
            * AncestorLevel
            * Mode
            * PreviousData
            * TemplatedParent
        -->
        <!-- getting at properties of the control itself: use RelativeSource Self -->
        <TextBlock Grid.Row="3" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Path=VerticalAlignment, RelativeSource={RelativeSource Self}}" VerticalAlignment="Top"/>
        <!-- above Self syntax is a kind of shortcut for following complete syntax -->
        <TextBlock Grid.Row="4" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Path=VerticalAlignment, RelativeSource={RelativeSource Mode=Self}}" VerticalAlignment="Top"/>
        <!-- getting at an ancestor by specifying its type -->
        <GroupBox Grid.Row="5" Header="Demo for Ancestor binding: level 2 above the bound element">
            <StackPanel>
                <TextBlock>Just a textblock control to have something inside the GroupBox</TextBlock>
                <GroupBox Header="Demo for Ancestor binding: level 1 above the bound element">
                    <StackPanel>
                        <TextBlock>Just a textblock control to have something inside the GroupBox</TextBlock>
                        <TextBlock Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type GroupBox}}}" />
                        <TextBlock Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type GroupBox}, AncestorLevel=2}}" />
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </GroupBox>
        <!-- getting at the templated control-->
        <Button Grid.Row="6" Background="Red">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Name="el1" Fill="Orange" Width="100" Height="100">
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <!-- Specifying the source: using the ElementName property-->
    </Grid>
</Window>
